// server/admin.js
import { getUsers, getProducts } from './mockDB.js';
import { getCurrentUser, logoutUser } from './auth.js';


const currentUser = getCurrentUser();
if (!currentUser || currentUser.role !== 'admin') {
  alert('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω! –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
  window.location.href = 'index.html';
}


const usersTableBody = document.querySelector('#users-table tbody');
const productsTableBody = document.querySelector('#products-table tbody');
const addUserBtn = document.getElementById('addUserBtn');
const addProductBtn = document.getElementById('addProductBtn');
const logoutBtn = document.getElementById('logoutBtn');

async function loadUsers() {
  try {
    const users = await getUsers();
    usersTableBody.innerHTML = users
      .map(u => `
        <tr>
          <td>${u.id}</td>
          <td>${u.login}</td>
          <td>${u.name}</td>
          <td>${u.role || 'user'}</td>
          <td>
            <button class="action-btn edit-btn" onclick="editUser(${u.id})">‚úèÔ∏è</button>
            <button class="action-btn delete-btn" onclick="deleteUser(${u.id})">üóëÔ∏è</button>
          </td>
        </tr>
      `)
      .join('');
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err);
    usersTableBody.innerHTML = '<tr><td colspan="5">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</td></tr>';
  }
}

async function loadProducts() {
  try {
    const products = await getProducts();
    productsTableBody.innerHTML = products
      .map(p => `
        <tr>
          <td>${p.id}</td>
          <td>${p.name}</td>
          <td>${p.description}</td>
          <td>${p.price} ‚ÇΩ</td>
          <td>
            <button class="action-btn edit-btn" onclick="editProduct(${p.id})">‚úèÔ∏è</button>
            <button class="action-btn delete-btn" onclick="deleteProduct(${p.id})">üóëÔ∏è</button>
          </td>
        </tr>
      `)
      .join('');
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err);
    productsTableBody.innerHTML = '<tr><td colspan="5">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</td></tr>';
  }
}

addUserBtn.addEventListener('click', () => {
  const login = prompt('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:');
  const password = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:');
  const name = prompt('–í–≤–µ–¥–∏—Ç–µ –∏–º—è:');
  const role = confirm('–°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º?') ? 'admin' : 'user';

  if (!login || !password || !name) return alert('–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!');

  alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${login}"`);
});

addProductBtn.addEventListener('click', () => {
  const name = prompt('–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:');
  const description = prompt('–û–ø–∏—Å–∞–Ω–∏–µ:');
  const price = prompt('–¶–µ–Ω–∞:');
  const image = prompt('–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:');

  if (!name || !price) return alert('–ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!');

  alert(`–¢–æ–≤–∞—Ä "${name}" –¥–æ–±–∞–≤–ª–µ–Ω (–≤–∏–∑—É–∞–ª—å–Ω–æ).`);
});

window.deleteUser = function (id) {
  if (confirm(`–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID ${id}?`)) {
    alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${id} —É–¥–∞–ª—ë–Ω (–≤–∏–∑—É–∞–ª—å–Ω–æ)`);
  }
};

window.editUser = function (id) {
  alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID ${id} (–≤–∏–∑—É–∞–ª—å–Ω–æ)`);
};

window.deleteProduct = function (id) {
  if (confirm(`–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä ID ${id}?`)) {
    alert(`–¢–æ–≤–∞—Ä ${id} —É–¥–∞–ª—ë–Ω (–≤–∏–∑—É–∞–ª—å–Ω–æ)`);
  }
};

window.editProduct = function (id) {
  alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ID ${id} (–≤–∏–∑—É–∞–ª—å–Ω–æ)`);
};

logoutBtn.addEventListener('click', () => {
  logoutUser();
  window.location.href = 'index.html';
});

loadUsers();
loadProducts();
